{
    "name": "btp-cap-genai-rag",
    "version": "1.0.0",
    "description": "A simple CAP project.",
    "repository": "https://github.com/SAP-samples/btp-cap-genai-rag",
    "license": "Apache License 2.0",
    "engines": {
        "node": "^18.x"
    },
    "private": true,
    "dependencies": {
        "@kubernetes/client-node": "^0.18.1",
        "@sap-cloud-sdk/connectivity": "^3.2.0",
        "@sap-cloud-sdk/generator": "^3.4.0",
        "@sap-cloud-sdk/http-client": "^3.2.0",
        "@sap-cloud-sdk/openapi": "^3.2.0",
        "@sap/audit-logging": "^5",
        "@sap/cds": "^7.2.0",
        "@sap/cds-hana": "^2.0.0",
        "@sap/cds-mtxs": "^1.10.0",
        "@sap/cds-odata-v2-adapter-proxy": "^1",
        "@sap/xsenv": "^4.0.0",
        "@sap/xssec": "^3.3.4",
        "axios": "^1.5.0",
        "cds-swagger-ui-express": "^0.5.0",
        "cf-nodejs-logging-support": "^6",
        "cfenv": "^1",
        "combined-stream": "^1.0.8",
        "cors": "^2.8.5",
        "express": "^4",
        "langchain": "^0.0.153",
        "module-alias": "^2.2.3",
        "node-fetch": "^2.6.7",
        "node-jose": "^2.1",
        "openai": "~4.4.0",
        "passport": "^0.6.0",
        "pg": "^8.11.2",
        "typeorm": "^0.3.17",
        "uuid": "^9.0.1"
    },
    "devDependencies": {
        "@babel/cli": "^7.22.15",
        "@prettier/plugin-xml": "^3.2.1",
        "@sap/approuter": "^14.1.1",
        "@sap/cds-common-content": "1.0.1",
        "@sap/cds-dk": "^7.2.0",
        "@sap/html5-app-deployer": "^5.0.0",
        "@sap/html5-repo-mock": "^2.1.1",
        "@sap/sbf": "^6.5.2",
        "@sap/ux-specification": "^1.96.4",
        "@swc/core": "1.3.82",
        "@types/cors": "^2.8.13",
        "@types/express": "^4.17.17",
        "@types/node": "^20.4.2",
        "@types/pg": "^8.10.2",
        "@types/sap__xsenv": "^3.3.0",
        "chai": "^4.3.7",
        "chai-as-promised": "^7.1.1",
        "chai-subset": "^1.6.0",
        "jest": "^29.0.1",
        "mbt": "^1.2.18",
        "npm-run-all": "^4.1.5",
        "prettier": "3.0.3",
        "rimraf": "^5.0.1",
        "shx": "^0.3.4"
    },
    "scripts": {
        "start": "cds-serve",
        "deploy": "cds deploy --to sqlite",
        "----------------------": "",
        "-Local/Hybrid-Testing-": "",
        "/--------------------/": "",
        "test": "mocha --timeout 20000",
        "hybrid": "npx --yes npm-run-all --npm-path npm --parallel cap:hybrid mock:hybrid ui5:hybrid",
        "dev": "npx --yes npm-run-all --npm-path npm --parallel cap:dev ui5:dev",
        "mtx": "npx --yes npm-run-all --npm-path npm --parallel cap:mtx ui5:dev",
        "---UI5-App---": "",
        "ui5:init": "npm install --prefix ./app/aisaas-ui-ui5",
        "ui5:dev": "npm run start --prefix ./app/aisaas-ui-ui5",
        "ui5:hybrid": "npm run start:hybrid --prefix ./app/aisaas-ui-ui5",
        "---CAP-Local---": "",
        "cap:dev": "cds-ts watch --profile development",
        "cap:mtx": "cds-ts watch --profile local-with-mtx",
        "cap:bas": "cds-ts watch --profile bas",
        "---CAP-Hybrid---": "",
        "cap:hybrid": "npx --yes npm-run-all --npm-path npm --parallel app:hybrid api:hybrid",
        "app:hybrid": "cds-ts bind --exec --profile hybrid-app npm run app:hybrid:helper",
        "api:hybrid": "cds-ts bind --exec --profile hybrid-api npm run api:hybrid:helper",
        "---CAP-Production---": "",
        "app:production": "cds-ts bind --exec --profile production npm run app:production:helper",
        "---CAP-Helper---": "",
        "app:hybrid:helper": "(cds-ts serve MailInsightsService,cds.xt.MTXServices --profile hybrid)",
        "api:hybrid:helper": "(cds-ts serve MailInsightsApiService --profile hybrid-api --port 4005)",
        "app:production:helper": "(cds-ts serve MailInsightsService,cds.xt.MTXServices --profile production)",
        "---Service-Broker---": "",
        "broker:hybrid": "cds bind --exec --profile hybrid-broker npm start",
        "---HTML5-Mock-Repo---": "",
        "mock:hybrid": "cds bind --exec --profile hybrid-router node ./node_modules/@sap/html5-repo-mock/index.js",
        "---Application-Router---": "",
        "router:hybrid": "cds bind --exec --profile hybrid-router node ./node_modules/@sap/approuter/approuter.js",
        "-Manual HTML5 Deployment-": "",
        "deployer:hybrid": "cds bind --exec --profile hybrid-html5 npm run deployer:run",
        "deployer:run": "(cd app/html5-deployer && node ../../node_modules/@sap/html5-app-deployer/index.js)",
        "---------------------": "",
        "-----PostgreSQL------": "",
        "/-------------------/": "",
        "start:pg": "docker compose up -d",
        "stop:pg": "docker compose stop",
        "--------------------": "",
        "--------BUILD-------": "",
        "/------------------/": "",
        "build": "npm run inst && npm run build:cds && npm run build:ui && npm run copy:common && npm run build:ts && npm run replace:paths && npm run cleanup:ts",
        "inst": "npm i && npm install --prefix ./app/aisaas-ui-ui5",
        "build:cds": "npx -p @sap/cds-dk cds build --profile production",
        "build:ui": "npm run build --prefix ./app/aisaas-ui-ui5/ && npm run copy --prefix ./app/aisaas-ui-ui5/",
        "copy:common": "npx shx cp -r ./srv/common ./gen/api && npx shx cp -r ./srv/common ./gen/app",
        "build:ts": "tsc -p ./tsconfig.json",
        "cleanup:ts": "npx shx rm -r \"./gen/**/*.{ts,tsconfig}\"",
        "replace:paths": "npx shx sed -i \"s/(srv\\/api-srv|srv\\/app-srv)/srv/g\" ./gen/**/csn.json",
        "cds2types": "cd app-service && cds2types --cds ./$npm_config_service.cds --output ./types/entities.ts"
    },
    "eslintConfig": {
        "extends": "eslint:recommended",
        "env": {
            "es2020": true,
            "node": true,
            "jest": true,
            "mocha": true
        },
        "globals": {
            "SELECT": true,
            "INSERT": true,
            "UPDATE": true,
            "DELETE": true,
            "CREATE": true,
            "DROP": true,
            "CDL": true,
            "CQL": true,
            "CXL": true,
            "cds": true
        },
        "rules": {
            "no-console": "off",
            "require-atomic-updates": "off"
        }
    },
    "prettier": {
        "arrowParens": "always",
        "useTabs": false,
        "tabWidth": 4,
        "semi": true,
        "singleQuote": false,
        "trailingComma": "none",
        "printWidth": 120,
        "xmlWhitespaceSensitivity": "ignore"
    },
    "cds": {
        "build": {
            "tasks": [
                {
                    "for": "hana",
                    "options": {
                        "model": [
                            "db",
                            "db/hana",
                            "srv/app-srv",
                            "srv/api-srv",
                            "@sap/cds-mtxs/db/extensions"
                        ]
                    }
                },
                {
                    "for": "nodejs",
                    "src": "srv/app-srv",
                    "dest": "app",
                    "options": {
                        "model": [
                            "srv/app-srv",
                            "@sap/cds-mtxs/srv/bootstrap",
                            "@sap/cds-mtxs/srv/extensibility-service"
                        ]
                    }
                },
                {
                    "for": "nodejs",
                    "src": "srv/api-srv",
                    "dest": "api",
                    "options": {
                        "model": [
                            "srv/api-srv"
                        ]
                    }
                },
                {
                    "for": "mtx",
                    "dest": "app"
                },
                {
                    "for": "hana",
                    "src": "db-com",
                    "options": {
                        "model": "db-com"
                    }
                }
            ]
        }
    }
}
