'use strict';

var base = require('langchain/llms/base');
var client_alephalpha = require('../../client/alephalpha.cjs');
require('../../base-921f7eb6.cjs');
require('@sap-cloud-sdk/util');
require('../../index-2134ea38.cjs');
require('@sap/xsenv');
require('fs');
require('util');
require('axios');

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class BTPAlephAlphaLuminous extends base.LLM {
  constructor(fields) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F;
    super(__spreadValues({}, fields));
    __publicField(this, "BTPAlephAlphaLuminousClient");
    __publicField(this, "deployment_id");
    __publicField(this, "maximum_tokens", 64);
    __publicField(this, "minimum_tokens");
    __publicField(this, "echo");
    __publicField(this, "temperature");
    __publicField(this, "top_k");
    __publicField(this, "top_p");
    __publicField(this, "presence_penalty");
    __publicField(this, "frequency_penalty");
    __publicField(this, "sequence_penalty");
    __publicField(this, "sequence_penalty_min_length");
    __publicField(this, "repetition_penalties_include_prompt");
    __publicField(this, "repetition_penalties_include_completion");
    __publicField(this, "use_multiplicative_presence_penalty");
    __publicField(this, "use_multiplicative_frequency_penalty");
    __publicField(this, "use_multiplicative_sequence_penalty");
    __publicField(this, "penalty_bias");
    __publicField(this, "penalty_exceptions");
    __publicField(this, "penalty_exceptions_include_stop_sequences");
    __publicField(this, "best_of");
    __publicField(this, "n");
    __publicField(this, "logit_bias");
    __publicField(this, "log_probs");
    __publicField(this, "tokens");
    __publicField(this, "raw_completion");
    __publicField(this, "disable_optimizations");
    __publicField(this, "completion_bias_inclusion");
    __publicField(this, "completion_bias_inclusion_first_token_only");
    __publicField(this, "completion_bias_exclusion");
    __publicField(this, "completion_bias_exclusion_first_token_only");
    __publicField(this, "contextual_control_threshold");
    __publicField(this, "control_log_additive");
    __publicField(this, "stop_sequences");
    this.deployment_id = (_a = fields == null ? void 0 : fields.deployment_id) != null ? _a : "alephalpha";
    this.temperature = (_b = fields == null ? void 0 : fields.temperature) != null ? _b : this.temperature;
    this.maximum_tokens = (_c = fields == null ? void 0 : fields.maximum_tokens) != null ? _c : this.maximum_tokens;
    this.minimum_tokens = (_d = fields == null ? void 0 : fields.minimum_tokens) != null ? _d : this.minimum_tokens;
    this.top_k = (_e = fields == null ? void 0 : fields.top_k) != null ? _e : this.top_k;
    this.top_p = (_f = fields == null ? void 0 : fields.top_p) != null ? _f : this.top_p;
    this.presence_penalty = (_g = fields == null ? void 0 : fields.presence_penalty) != null ? _g : this.presence_penalty;
    this.frequency_penalty = (_h = fields == null ? void 0 : fields.frequency_penalty) != null ? _h : this.frequency_penalty;
    this.sequence_penalty = (_i = fields == null ? void 0 : fields.sequence_penalty) != null ? _i : this.sequence_penalty;
    this.sequence_penalty_min_length = (_j = fields == null ? void 0 : fields.sequence_penalty_min_length) != null ? _j : this.sequence_penalty_min_length;
    this.repetition_penalties_include_prompt = (_k = fields == null ? void 0 : fields.repetition_penalties_include_prompt) != null ? _k : this.repetition_penalties_include_prompt;
    this.repetition_penalties_include_completion = (_l = fields == null ? void 0 : fields.repetition_penalties_include_completion) != null ? _l : this.repetition_penalties_include_completion;
    this.use_multiplicative_presence_penalty = (_m = fields == null ? void 0 : fields.use_multiplicative_presence_penalty) != null ? _m : this.use_multiplicative_presence_penalty;
    this.use_multiplicative_frequency_penalty = (_n = fields == null ? void 0 : fields.use_multiplicative_frequency_penalty) != null ? _n : this.use_multiplicative_frequency_penalty;
    this.use_multiplicative_sequence_penalty = (_o = fields == null ? void 0 : fields.use_multiplicative_sequence_penalty) != null ? _o : this.use_multiplicative_sequence_penalty;
    this.penalty_bias = (_p = fields == null ? void 0 : fields.penalty_bias) != null ? _p : this.penalty_bias;
    this.penalty_exceptions = (_q = fields == null ? void 0 : fields.penalty_exceptions) != null ? _q : this.penalty_exceptions;
    this.penalty_exceptions_include_stop_sequences = (_r = fields == null ? void 0 : fields.penalty_exceptions_include_stop_sequences) != null ? _r : this.penalty_exceptions_include_stop_sequences;
    this.best_of = (_s = fields == null ? void 0 : fields.best_of) != null ? _s : this.best_of;
    this.n = (_t = fields == null ? void 0 : fields.n) != null ? _t : this.n;
    this.logit_bias = (_u = fields == null ? void 0 : fields.logit_bias) != null ? _u : this.logit_bias;
    this.log_probs = (_v = fields == null ? void 0 : fields.log_probs) != null ? _v : this.log_probs;
    this.tokens = (_w = fields == null ? void 0 : fields.tokens) != null ? _w : this.tokens;
    this.raw_completion = (_x = fields == null ? void 0 : fields.raw_completion) != null ? _x : this.raw_completion;
    this.disable_optimizations = (_y = fields == null ? void 0 : fields.disable_optimizations) != null ? _y : this.disable_optimizations;
    this.completion_bias_inclusion = (_z = fields == null ? void 0 : fields.completion_bias_inclusion) != null ? _z : this.completion_bias_inclusion;
    this.completion_bias_inclusion_first_token_only = (_A = fields == null ? void 0 : fields.completion_bias_inclusion_first_token_only) != null ? _A : this.completion_bias_inclusion_first_token_only;
    this.completion_bias_exclusion = (_B = fields == null ? void 0 : fields.completion_bias_exclusion) != null ? _B : this.completion_bias_exclusion;
    this.completion_bias_exclusion_first_token_only = (_C = fields == null ? void 0 : fields.completion_bias_exclusion_first_token_only) != null ? _C : this.completion_bias_exclusion_first_token_only;
    this.contextual_control_threshold = (_D = fields == null ? void 0 : fields.contextual_control_threshold) != null ? _D : this.contextual_control_threshold;
    this.control_log_additive = (_E = fields == null ? void 0 : fields.control_log_additive) != null ? _E : this.control_log_additive;
    this.stop_sequences = (_F = fields == null ? void 0 : fields.stop_sequences) != null ? _F : this.stop_sequences;
    this.BTPAlephAlphaLuminousClient = new client_alephalpha.BTPAlephAlphaLuminousClient();
  }
  _llmType() {
    return "alephalpha-luminous";
  }
  async _call(prompt, options, runManager) {
    const res = await this.caller.callWithOptions(
      {
        signal: options.signal
      },
      () => {
        var _a;
        return this.BTPAlephAlphaLuminousClient.createTextCompletion(
          {
            prompt,
            deployment_id: this.deployment_id,
            maximum_tokens: this.maximum_tokens,
            minimum_tokens: this.minimum_tokens,
            echo: this.echo,
            temperature: this.temperature,
            top_k: this.top_k,
            top_p: this.top_p,
            presence_penalty: this.presence_penalty,
            frequency_penalty: this.frequency_penalty,
            sequence_penalty: this.sequence_penalty,
            sequence_penalty_min_length: this.sequence_penalty_min_length,
            repetition_penalties_include_prompt: this.repetition_penalties_include_prompt,
            repetition_penalties_include_completion: this.repetition_penalties_include_completion,
            use_multiplicative_presence_penalty: this.use_multiplicative_presence_penalty,
            use_multiplicative_frequency_penalty: this.use_multiplicative_frequency_penalty,
            use_multiplicative_sequence_penalty: this.use_multiplicative_sequence_penalty,
            penalty_bias: this.penalty_bias,
            penalty_exceptions: this.penalty_exceptions,
            penalty_exceptions_include_stop_sequences: this.penalty_exceptions_include_stop_sequences,
            best_of: this.best_of,
            n: this.n,
            logit_bias: this.logit_bias,
            log_probs: this.log_probs,
            tokens: this.tokens,
            raw_completion: this.raw_completion,
            disable_optimizations: this.disable_optimizations,
            completion_bias_inclusion: this.completion_bias_inclusion,
            completion_bias_inclusion_first_token_only: this.completion_bias_inclusion_first_token_only,
            completion_bias_exclusion: this.completion_bias_exclusion,
            completion_bias_exclusion_first_token_only: this.completion_bias_exclusion_first_token_only,
            contextual_control_threshold: this.contextual_control_threshold,
            control_log_additive: this.control_log_additive,
            stop_sequences: (_a = options == null ? void 0 : options.stop) != null ? _a : this.stop_sequences
          },
          {
            signal: options.signal
          }
        );
      }
    );
    await (runManager == null ? void 0 : runManager.handleLLMNewToken(res.completions[0].completion));
    return res.completions[0].completion;
  }
}

exports.BTPAlephAlphaLuminous = BTPAlephAlphaLuminous;
