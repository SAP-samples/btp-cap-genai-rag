import { CallbackManagerForLLMRun } from 'langchain/callbacks';
import { LLMResult } from 'langchain/schema';
import { BaseLLMParams } from 'langchain/llms/base';
import { OpenAIInput, OpenAI } from 'langchain/llms/openai';
import { B as BTPBaseLLMParameters } from '../../base-cac7307b.js';
import { BTPOpenAIGPTTextModel } from '../../client/openai.js';
import 'axios';
import '../../config-822cfdeb.js';
import '@sap-cloud-sdk/util';
import 'zod-to-json-schema/src/parseDef.js';

/**
 * Input for Text generation for OpenAI GPT
 */
interface BTPOpenAIGPTInput extends Omit<OpenAIInput, "modelName" | "openAIApiKey" | "streaming">, BTPBaseLLMParameters<BTPOpenAIGPTTextModel>, BaseLLMParams {
}
/**
 * OpenAI GPT Language Model Wrapper to generate texts
 */
declare class BTPOpenAIGPT extends OpenAI implements BTPOpenAIGPTInput {
    private btpOpenAIClient;
    deployment_id: BTPOpenAIGPTTextModel;
    constructor(fields?: Partial<BTPOpenAIGPTInput>);
    _generate(prompts: string[], options: this["ParsedCallOptions"], runManager?: CallbackManagerForLLMRun): Promise<LLMResult>;
}
/**
 * @deprecated Use {@link BTPOpenAIGPT} instead
 */
declare const BTPOpenAI: typeof BTPOpenAIGPT;

export { BTPOpenAI, BTPOpenAIGPT, type BTPOpenAIGPTInput };
