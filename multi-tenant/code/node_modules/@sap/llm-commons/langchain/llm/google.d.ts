import { CallbackManagerForLLMRun } from 'langchain/callbacks';
import { LLMResult } from 'langchain/schema';
import { BaseLLMParams } from 'langchain/llms/base';
import { GooglePaLMTextInput, GooglePaLM } from 'langchain/llms/googlepalm';
import { B as BTPBaseLLMParameters } from '../../base-cac7307b.js';
import { BTPGooglePaLMTextModel } from '../../client/google.js';
import 'axios';
import '../../config-822cfdeb.js';
import '@sap-cloud-sdk/util';

/**
 * Input for Text generation for Google PaLM
 */
interface BTPGooglePaLMInput extends Omit<GooglePaLMTextInput, "modelName" | "apiKey" | "maxOutputTokens" | "stopSequences" | "safetySettings">, BTPBaseLLMParameters<BTPGooglePaLMTextModel>, BaseLLMParams {
    /**
     * Maximum number of tokens that can be generated in the response. A token is approximately four characters.
     * 100 tokens correspond to roughly 60-80 words.
     *
     * Specify a lower value for shorter responses and a higher value for longer responses.
     */
    maxOutputTokens: number;
}
/**
 * GooglePaLM Language Model Wrapper to generate texts
 */
declare class BTPGooglePaLM extends GooglePaLM implements BTPGooglePaLMInput {
    private btpGooglePaLMClient;
    deployment_id: BTPGooglePaLMTextModel;
    maxOutputTokens: number;
    constructor(fields?: Partial<BTPGooglePaLMInput>);
    _generate(prompts: string[], options: this["ParsedCallOptions"], runManager?: CallbackManagerForLLMRun): Promise<LLMResult>;
}

export { BTPGooglePaLM, type BTPGooglePaLMInput };
