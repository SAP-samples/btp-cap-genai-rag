import { CallbackManagerForLLMRun } from 'langchain/callbacks';
import { BaseLLMParams } from 'langchain/llms/base';
import { BTPCohereCommandTextModel } from '../../client/cohere.js';
import { B as BTPBaseLLMParameters } from '../../base-cac7307b.js';
import { CohereInput, Cohere } from 'langchain/llms/cohere';
import 'axios';
import '../../config-822cfdeb.js';
import '@sap-cloud-sdk/util';

/**
 * Input for Text generation for Cohere Command
 */
interface BTPCohereCommandInput extends Omit<CohereInput, "model" | "apiKey">, BTPBaseLLMParameters<BTPCohereCommandTextModel>, BaseLLMParams {
    /**
     * Ensures only the top `k` most likely tokens are considered for generation at each step.
     *
     * Allowed values: min value of 0, max value of 500.
     *
     * @default 0
     */
    k?: number;
    /**
     * Ensures that only the most likely tokens, with total probability mass of `p`, are considered for generation at each step.
     * If both `k` and `p` are enabled, `p` acts after `k`.
     *
     * Allowed values: min value of 0.01, max value of 0.99.
     *
     * @default 0
     */
    p?: number;
}
/**
 * Cohere Command Language Model Wrapper to generate texts
 */
declare class BTPCohereCommand extends Cohere implements BTPCohereCommandInput {
    private btpCohereCommandClient;
    deployment_id: BTPCohereCommandTextModel;
    k?: number;
    p?: number;
    constructor(fields?: Partial<BTPCohereCommandInput>);
    _call(prompt: string, options: this["ParsedCallOptions"], runManager?: CallbackManagerForLLMRun): Promise<string>;
}

export { BTPCohereCommand, type BTPCohereCommandInput };
