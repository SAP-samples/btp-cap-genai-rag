{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "#/aisaas-api/blob/main/values.schema.json",
    "type": "object",
    "required": [
        "image",
        "resources"
    ],
    "additionalProperties": false,
    "properties": {
        "global": {
            "$id": "#/properties/global",
            "title": "Helm global values",
            "description": "For more information, see https://helm.sh/docs/chart_template_guide/subcharts_and_globals/#global-chart-values",
            "type": "object",
            "x-ignore-untested": true,
            "additionalProperties": true,
            "properties": {
                "imagePullSecret": {
                    "$id": "#/properties/global/imagePullSecret",
                    "title": "Image Pull Secret configuration",
                    "description": "For more information, see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
                    "additionalProperties": true,
                    "type": "object",
                    "properties": {
                        "name": {
                            "title": "Secret name",
                            "description": "Name of the Kubernetes Secret, used as an image pull secret (must be of type kubernetes.io/dockerconfigjson). Can't be used with the `dockerconfigjson` option.",
                            "$ref": "#/definitions/KubernetesName"
                        },
                        "dockerconfigjson": {
                            "title": "Secret content",
                            "description": "The content for the dynamically generated Kubernetes Secret, which will be used as an image pull secret. Can't be used with the `name` option.",
                            "type": "string"
                        }
                    },
                    "dependencies": {
                        "name": {
                            "not": {
                                "required": [
                                    "dockerconfigjson"
                                ]
                            }
                        },
                        "dockerconfigjson": {
                            "not": {
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "image": {
                    "$id": "#/properties/global/image",
                    "title": "Image configuration",
                    "description": "Either name or repository is required.",
                    "type": "object",
                    "required": [],
                    "additionalProperties": true,
                    "properties": {
                        "tag": {
                            "$id": "#/properties/image/global/properties/tag",
                            "$ref": "#/definitions/ImageTag"
                        },
                        "registry": {
                            "$id": "#/properties/image/global/properties/registry",
                            "$ref": "#/definitions/ImageRegistry"
                        }
                    }
                }
            }
        },
        "nameOverride": {
            "$id": "#/properties/nameOverride",
            "title": "Chart name override",
            "description": "Will be used instead of the `.Chart.Name`, e.g. when generating the Deployment name.",
            "type": "string",
            "pattern": "[0-9a-z][0-9a-z-.]*"
        },
        "fullnameOverride": {
            "$id": "#/properties/fullnameOverride",
            "title": "Override for the `.fullname` helper function.",
            "description": "Will be used as an override for the `.fullname` helper function (i.e. `.Release.Name-.Chart.Name`).",
            "type": "string",
            "pattern": "[0-9a-z][0-9a-z-.]*"
        },
        "replicaCount": {
            "$id": "#/properties/replicaCount",
            "title": "Replica count",
            "description": "Number of desired pods within the Deployment.",
            "type": "integer",
            "minimum": 1,
            "default": 1
        },
        "port": {
            "$id": "#/properties/port",
            "title": "Port",
            "description": "Application's exposed port.",
            "type": "integer",
            "minimum": 1,
            "maximum": 65535,
            "default": 8080
        },
        "image": {
            "$id": "#/properties/image",
            "title": "Image configuration",
            "type": "object",
            "required": [
                "repository"
            ],
            "additionalProperties": false,
            "properties": {
                "repository": {
                    "$id": "#/properties/image/properties/repository",
                    "title": "Repository of the image",
                    "description": "Should also include the image name (i.e. everything before the `:` sign).",
                    "type": "string",
                    "pattern": "^[\\w-./:]*[@sha256]*$"
                },
                "tag": {
                    "$id": "#/properties/image/properties/tag",
                    "$ref": "#/definitions/ImageTag"
                },
                "registry": {
                    "$id": "#/properties/image/properties/registry",
                    "$ref": "#/definitions/ImageRegistry"
                }
            }
        },
        "imagePullSecret": {
            "$id": "#/properties/imagePullSecret",
            "title": "Image Pull Secret configuration",
            "description": "For more information, see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
            "additionalProperties": false,
            "type": "object",
            "properties": {
                "name": {
                    "title": "Secret name",
                    "description": "Name of the Kubernetes Secret, used as an image pull secret (must be of type kubernetes.io/dockerconfigjson). Can't be used with the `dockerconfigjson` option.",
                    "$ref": "#/definitions/KubernetesName"
                },
                "dockerconfigjson": {
                    "title": "Secret content",
                    "description": "The content for the dynamically generated Kubernetes Secret, which will be used as an image pull secret. Can't be used with the `name` option.",
                    "type": "string"
                }
            },
            "dependencies": {
                "name": {
                    "not": {
                        "required": [
                            "dockerconfigjson"
                        ]
                    }
                },
                "dockerconfigjson": {
                    "not": {
                        "required": [
                            "name"
                        ]
                    }
                }
            }
        },
        "additionalVolumes": {
            "$id": "#/properties/additionalVolumes",
            "title": "Additional Pod volumes",
            "description": "List of volumes, which should be mounted into Pods",
            "type": "array",
            "additionalItems": false,
            "default": [],
            "items": {
                "title": "Additional volume configuration",
                "type": "object",
                "additionalProperties": true,
                "required": [
                    "name",
                    "volumeMount"
                ],
                "properties": {
                    "name": {
                        "title": "Name of the volume",
                        "type": "string",
                        "$ref": "#/definitions/KubernetesName"
                    },
                    "volumeMount": {
                        "title": "Volume mount configuration",
                        "type": "object",
                        "required": [
                            "mountPath"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "mountPath": {
                                "description": "Path within a Pod, where the volume should be mounted.",
                                "type": "string",
                                "pattern": "^[^:]*$"
                            },
                            "mountPropagation": {
                                "description": "Mount propagation allows for sharing volumes mounted by a container to other containers in the same pod, or even to other pods on the same node.",
                                "type": "string",
                                "enum": [
                                    "None",
                                    "HostToContainer"
                                ]
                            },
                            "readOnly": {
                                "description": "Whether mounted volume should be in read-only mode.",
                                "type": "boolean"
                            },
                            "subPath": {
                                "description": "Sub-path inside the referenced volume instead of its root.",
                                "type": "string"
                            },
                            "subPathExpr": {
                                "description": "Similar to the `subPath`, but can be constructed using the downward API environment variables. For more info, see https://kubernetes.io/docs/concepts/storage/volumes/#using-subpath-expanded-environment",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "ha": {
            "$id": "#/properties/ha",
            "title": "High Availability configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "$id": "#/properties/ha/properties/enabled",
                    "description": "Enables additional high-availability related configuration, like Pod Disruption Budget and Topology Spread Constraints.",
                    "type": "boolean",
                    "default": true
                },
                "pdb": {
                    "$id": "#/properties/ha/properties/pdb",
                    "title": "Pod Disruption Budget configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "minAvailable": {
                            "$id": "#/properties/ha/properties/pdb/properties/minAvailable",
                            "description": "Defines the minimal number or percentage of Pods available in case of voluntary disruption.",
                            "type": "integer",
                            "default": 1
                        }
                    }
                }
            }
        },
        "hpa": {
            "$id": "#/properties/hpa",
            "title": "Horizontal Pod Autoscaling configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "$id": "#/properties/hpa/properties/enabled",
                    "description": "Enables additional horizontal pod autoscaling related configuration (default: true)",
                    "type": "boolean",
                    "default": true
                },
                "minReplicaCount": {
                    "description": "Minimum number of replicas being created (default: 1)",
                    "type": "integer",
                    "default": 1
                },
                "maxReplicaCount": {
                    "description": "Maximum number of replicas being created (default: 3)",
                    "type": "integer",
                    "default": 3
                },
                "cpuTargetAverageUtilization": {
                    "description": "Target average utilization of CPU usage (default: 50)",
                    "type": "integer",
                    "default": 50
                },
                "cpuTargetAverageValue": {
                    "description": "Target average value of CPU usage",
                    "type": "integer"
                }
            }
        },
        "serviceAccount": {
            "$id": "#/properties/serviceAccount",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "enabled",
                "automountToken"
            ],
            "properties": {
                "enabled": {
                    "$id": "#/properties/serviceAccount/properties/enabled",
                    "description": "Service account will be created (default: false)",
                    "type": "boolean",
                    "default": false
                },
                "automountToken": {
                    "$id": "#/properties/serviceAccount/properties/automountToken",
                    "title": "Auto Mount Service Account Token",
                    "description": "Enables the auto mounting of the Service Account Token.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "apim": {
            "$id": "#/properties/apim",
            "type": "object",
            "additionalProperties": false,
            "required": [],
            "properties": {
                "enabled": {
                    "$id": "#/properties/apim/enabled",
                    "description": "Own service account will be created (default: false)",
                    "type": "boolean",
                    "default": false
                },
                "host": {
                    "$id": "#/properties/apim/url",
                    "title": "SAP API Management runtime hostname w/o protocol",
                    "description": "Runtime URL w/o protocol (e.g. <<alias>>.prod.apimanagement.<<region>>.hana.ondemand.com)",
                    "type": "string"
                },
                "port": {
                    "$id": "#/properties/apim/port",
                    "title": "SAP API Management runtime port",
                    "description": "SAP API Management port (default: 443)",
                    "type": "integer",
                    "default": 443
                },
                "path": {
                    "$id": "#/properties/apim/path",
                    "title": "SAP API Management runtime API Proxy path",
                    "description": "Path of the API Proxy in SAP API Management (e.g. kyma-suaas-api)",
                    "type": "string"
                },
                "xsuaa": {
                    "type": "object",
                    "description": "XSUAA details for authenticating requests coming from SAP API Management",
                    "additionalProperties": false,
                    "required": [],
                    "properties": {
                        "host": {
                            "title": "XSUAA hostname of SAP BTP provider subaccount w/o protocol",
                            "description": "Hostname w/o protocol (e.g. <<subaccount>>.authentication.<<region>>.hana.ondemand.com)",
                            "$id": "#/properties/apim/xsuaa/properties/url",
                            "type": "string"
                        },
                        "sub": {
                            "title": "Subject (sub) claim prefix of SuaaS API application",
                            "description": "Subject prefix based on xsappname (default: sb-aisaas-api)",
                            "$id": "#/properties/apim/xsuaa/properties/sub",
                            "type": "string",
                            "default": "sb-aisaas-api"
                        }
                    }
                }
            }
        },
        "resources": {
            "$id": "#/properties/resources",
            "title": "Pod resources configuration",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "requests",
                "limits"
            ],
            "properties": {
                "requests": {
                    "type": "object",
                    "description": "Minimal required resources for the application to operate, that will be reserved for each replica.",
                    "additionalProperties": false,
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "description": "CPU resource units, as described here https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu",
                            "$id": "#/properties/resources/properties/requests/properties/cpu",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "ephemeral-storage": {
                            "description": "Size of the local ephemeral storage, measured in bytes. For more info, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#local-ephemeral-storage",
                            "$id": "#/properties/resources/properties/requests/properties/ephemeral-storage",
                            "type": "string"
                        },
                        "memory": {
                            "description": "Amount of memory, mesaured in bytes. For more info, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory",
                            "$id": "#/properties/resources/properties/requests/properties/memory",
                            "type": "string"
                        }
                    }
                },
                "limits": {
                    "type": "object",
                    "description": "",
                    "additionalProperties": false,
                    "required": [
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "description": "CPU resource units, as described here https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu",
                            "$id": "#/properties/resources/properties/limits/properties/cpu",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "ephemeral-storage": {
                            "description": "Size of the local ephemeral storage, measured in bytes. For more info, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#local-ephemeral-storage",
                            "$id": "#/properties/resources/properties/limits/properties/ephemeral-storage",
                            "type": "string"
                        },
                        "memory": {
                            "description": "Amount of memory, mesaured in bytes. For more info, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory",
                            "$id": "#/properties/resources/properties/limits/properties/memory",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "health_check": {
            "$id": "#/properties/health_check",
            "title": "Health-check configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "liveness": {
                    "$id": "#/properties/health_check/properties/liveness",
                    "description": "Liveness-probe configuration.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "description": "HTTP path used by Kubernetes, to perform health-check calls.",
                            "type": "string",
                            "default": "/healthz"
                        }
                    }
                },
                "readiness": {
                    "$id": "#/properties/health_check/properties/readiness",
                    "description": "Readiness-probe configuration.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "description": "HTTP path used by Kubernetes, to perform health-check calls.",
                            "type": "string",
                            "default": "/healthz"
                        }
                    }
                }
            }
        },
        "startupTimeout": {
            "$id": "#/properties/startupTimeout",
            "description": "Initial timeout in seconds, during which the app must start giving the response to the liveness-probe.",
            "type": "integer",
            "minimum": 1,
            "default": 30
        },
        "env": {
            "$id": "#/properties/env",
            "description": "Key-value map of environment variables, which should be added to the Pod spec.",
            "anyOf": [
                {
                    "type": "object",
                    "patternProperties": {
                        "^[-._a-zA-Z][-._a-zA-Z0-9]*$": {
                            "$comment": "regex above copied from https://github.com/kubernetes/kubernetes/blob/ea0764452222146c47ec826977f49d7001b0ea8c/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L402",
                            "anyOf": [
                                {
                                    "description": "Plain value of an environment variable.",
                                    "type": [
                                        "integer",
                                        "string"
                                    ]
                                },
                                {
                                    "description": "`valueFrom` configuration for the environment variable https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "maxProperties": 1,
                                    "properties": {
                                        "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "name": {
                                                    "description": "Name of a ConfigMap.",
                                                    "$ref": "#/definitions/KubernetesName"
                                                },
                                                "key": {
                                                    "description": "Key in that ConfigMap, which value will be used.",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "secretKeyRef": {
                                            "description": "Selects a key of a Secret.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "name": {
                                                    "description": "Name of a Secret.",
                                                    "$ref": "#/definitions/KubernetesName"
                                                },
                                                "key": {
                                                    "description": "Key in that Secret, which value will be used.",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "resourceFieldRef": {
                                            "description": "Selects a resource of the container.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "containerName": {
                                                    "description": "Name of a Container.",
                                                    "$ref": "#/definitions/KubernetesName"
                                                },
                                                "resource": {
                                                    "description": "Only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "fieldRef": {
                                            "description": "Selects a field of the pod.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "fieldPath": {
                                                    "type": "string",
                                                    "description": "Supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "default": {}
                },
                {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "maxProperties": 2,
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "pattern": "^[-._a-zA-Z][-._a-zA-Z0-9]*$"
                            },
                            "value": {
                                "type": [
                                    "string",
                                    "integer"
                                ]
                            },
                            "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "description": "Name of a ConfigMap.",
                                        "$ref": "#/definitions/KubernetesName"
                                    },
                                    "key": {
                                        "description": "Key in that ConfigMap, which value will be used.",
                                        "type": "string"
                                    }
                                }
                            },
                            "secretKeyRef": {
                                "description": "Selects a key of a Secret.",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "description": "Name of a Secret.",
                                        "$ref": "#/definitions/KubernetesName"
                                    },
                                    "key": {
                                        "description": "Key in that Secret, which value will be used.",
                                        "type": "string"
                                    }
                                }
                            },
                            "resourceFieldRef": {
                                "description": "Selects a resource of the container.",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "containerName": {
                                        "description": "Name of a Container.",
                                        "$ref": "#/definitions/KubernetesName"
                                    },
                                    "resource": {
                                        "description": "Only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                        "type": "string"
                                    }
                                }
                            },
                            "fieldRef": {
                                "description": "Selects a field of the pod.",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "fieldPath": {
                                        "type": "string",
                                        "description": "Supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "default": {}
        },
        "envSecretNames": {
            "$id": "#/properties/envSecretNames",
            "description": "List of Kubernetes Secret names, used as sources for the Pod's environment variables.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/KubernetesName"
            },
            "default": []
        },
        "expose": {
            "$id": "#/properties/expose",
            "title": "",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "host": {
                    "$id": "#/properties/expose/properties/host",
                    "description": "Specifies the service's dns name for inbound external traffic. If it doesn't contain a dot, the default cluster domain will be appended.",
                    "type": "string"
                },
                "gateway": {
                    "$id": "#/properties/expose/properties/gateway",
                    "description": "Specifies the service's gateway for inbound external traffic.",
                    "type": "string"
                },
                "enabled": {
                    "$id": "#/properties/expose/properties/enabled",
                    "description": "Expose the application to the internet.",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "bindings": {
            "$id": "#/properties/bindings",
            "title": "Service Binding configuration",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^[-._a-zA-Z][-._a-zA-Z0-9]*$": {
                    "anyOf": [
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "fromSecret"
                            ],
                            "properties": {
                                "enabled": {
                                    "description": "Allows you to enable or disable creation of this binding",
                                    "type": "boolean"
                                },
                                "fromSecret": {
                                    "description": "Name of a Kubernetes Secret, with the binding content, compliant to the SAP Kubernetes Service Binding spec",
                                    "$ref": "#/definitions/KubernetesName"
                                }
                            }
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "description": "Allows you to enable or disable creation of this binding",
                                    "type": "boolean"
                                },
                                "serviceInstanceName": {
                                    "description": "Name of a BTP Operator Service Instance, created by the `service-instance` Helm chart. Can't be used with the `serviceInstanceFullname` option.",
                                    "$ref": "#/definitions/KubernetesName"
                                },
                                "serviceInstanceFullname": {
                                    "description": "Full name of a BTP Operator Service Instance. Can't be used with the `serviceInstanceName` option.",
                                    "$ref": "#/definitions/KubernetesName"
                                },
                                "externalName": {
                                    "description": "The name for the service binding in SAP BTP",
                                    "type": "string"
                                },
                                "secretName": {
                                    "description": "The name of the secret where the credentials are stored.",
                                    "$ref": "#/definitions/KubernetesName"
                                },
                                "parameters": {
                                    "description": "Some services support the provisioning of additional configuration parameters during the bind request. For the list of supported parameters, check the documentation of the particular service offering.",
                                    "type": "object"
                                },
                                "parametersFrom": {
                                    "description": "List of sources to populate parameters.",
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "description": "Kubernetes Secret as a parameters source.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "secretKeyRef": {
                                                        "type": "object",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "name",
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of a Secret.",
                                                                "$ref": "#/definitions/KubernetesName"
                                                            },
                                                            "key": {
                                                                "description": "Key in that Secret, which contains a string that represents the json to include in the set of parameters to be sent to the api.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "description": "Kubernetes Config Map as a parameters source.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "type": "object",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "name",
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of a Config Map",
                                                                "$ref": "#/definitions/KubernetesName"
                                                            },
                                                            "key": {
                                                                "description": "Key in that Config Map, which contains a string that represents the json to include in the set of parameters to be sent to the api.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "credentialsRotationPolicy": {
                                    "description": "Holds automatic credentials rotation configuration. For more details, see https://github.com/SAP/sap-btp-service-operator#spec-1",
                                    "type": "object"
                                }
                            },
                            "dependencies": {
                                "serviceInstanceName": {
                                    "not": {
                                        "required": [
                                            "serviceInstanceFullname"
                                        ]
                                    }
                                },
                                "serviceInstanceFullname": {
                                    "not": {
                                        "required": [
                                            "serviceInstanceName"
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        "serviceKeys": {
            "$id": "#/properties/serviceKeys",
            "title": "Service Key configuration",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^[-._a-zA-Z][-._a-zA-Z0-9]*$": {
                    "anyOf": [
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "fromSecret"
                            ],
                            "properties": {
                                "fromSecret": {
                                    "description": "Name of a Kubernetes Secret, with the binding content, compliant to the SAP Kubernetes Service Binding spec",
                                    "$ref": "#/definitions/KubernetesName"
                                }
                            }
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "serviceInstanceName": {
                                    "description": "Name of a BTP Operator Service Instance, created by the `service-instance` Helm chart. Can't be used with the `serviceInstanceFullname` option.",
                                    "$ref": "#/definitions/KubernetesName"
                                },
                                "serviceInstanceFullname": {
                                    "description": "Full name of a BTP Operator Service Instance. Can't be used with the `serviceInstanceName` option.",
                                    "$ref": "#/definitions/KubernetesName"
                                },
                                "externalName": {
                                    "description": "The name for the service binding in SAP BTP",
                                    "type": "string"
                                },
                                "secretName": {
                                    "description": "The name of the secret where the credentials are stored.",
                                    "$ref": "#/definitions/KubernetesName"
                                },
                                "parameters": {
                                    "description": "Some services support the provisioning of additional configuration parameters during the bind request. For the list of supported parameters, check the documentation of the particular service offering.",
                                    "type": "object"
                                },
                                "parametersFrom": {
                                    "description": "List of sources to populate parameters.",
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "object",
                                                "description": "Kubernetes Secret as a parameters source.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "secretKeyRef": {
                                                        "type": "object",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "name",
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of a Secret.",
                                                                "$ref": "#/definitions/KubernetesName"
                                                            },
                                                            "key": {
                                                                "description": "Key in that Secret, which contains a string that represents the json to include in the set of parameters to be sent to the api.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "description": "Kubernetes Config Map as a parameters source.",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "type": "object",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "name",
                                                            "key"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of a Config Map",
                                                                "$ref": "#/definitions/KubernetesName"
                                                            },
                                                            "key": {
                                                                "description": "Key in that Config Map, which contains a string that represents the json to include in the set of parameters to be sent to the api.",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "credentialsRotationPolicy": {
                                    "description": "Holds automatic credentials rotation configuration. For more details, see https://github.com/SAP/sap-btp-service-operator#spec-1",
                                    "type": "object"
                                }
                            },
                            "dependencies": {
                                "serviceInstanceName": {
                                    "not": {
                                        "required": [
                                            "serviceInstanceFullname"
                                        ]
                                    }
                                },
                                "serviceInstanceFullname": {
                                    "not": {
                                        "required": [
                                            "serviceInstanceName"
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    "definitions": {
        "KubernetesName": {
            "type": "string",
            "$comment": "running `kubectl create secret generic invalid_name` will print this regex",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
        },
        "ImageRegistry": {
            "type": "string",
            "title": "Image registry",
            "description": "Image registry e.g. docker.io",
            "pattern": "^[\\w-./]+$"
        },
        "ImageTag": {
            "title": "Image tag",
            "description": "Image tag without the name (everything after the `:` sign, potentially including the `@sha256` section at the end).",
            "type": "string",
            "$comment": "Copied from https://github.com/containers/image/blob/18d58d29fdc4fc32fb8a8a6d186b829b217f1bf5/docker/reference/regexp.go#L68-L70",
            "pattern": "^((?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+)?(?::[0-9]+)?/)?[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?)(?::([\\w][\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$"
        }
    }
}