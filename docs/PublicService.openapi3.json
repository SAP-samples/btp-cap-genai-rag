{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace PublicService",
    "description": "This service is located at [/catalog/PublicService/](/catalog/PublicService/)",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.0",
  "x-sap-shortText": "Service for namespace PublicService",
  "servers": [
    {
      "url": "/catalog/PublicService"
    }
  ],
  "tags": [
    {
      "name": "{i18n>assessment.typeNamePlural}"
    },
    {
      "name": "{i18n>circularityMetric.typeNamePlural}"
    },
    {
      "name": "{i18n>materialSplit.typeNamePlural}"
    },
    {
      "name": "{i18n>member.typeNamePlural}"
    },
    {
      "name": "{i18n>product.typeNamePlural}"
    },
    {
      "name": "{i18n>project.typeNamePlural}"
    },
    {
      "name": "{i18n>role.typeNamePlural}"
    },
    {
      "name": "{i18n>salesSplit.typeNamePlural}"
    },
    {
      "name": "{i18n>user.typeNamePlural}"
    },
    {
      "name": "Countries"
    },
    {
      "name": "Countries_texts"
    },
    {
      "name": "Currencies"
    },
    {
      "name": "Currencies_texts"
    },
    {
      "name": "Languages"
    },
    {
      "name": "Languages_texts"
    },
    {
      "name": "RecyclingCountries"
    },
    {
      "name": "RecyclingMaterials"
    },
    {
      "name": "SalesOrders"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Projects HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments": {
      "get": {
        "summary": "Retrieve a list of assessments.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "description",
                  "description desc",
                  "eolProductDesign",
                  "eolProductDesign desc",
                  "product_ID",
                  "product_ID desc",
                  "project_ID",
                  "project_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved assessments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Assessments",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Assessments"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single assessment.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New assessment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Assessments-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created assessment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single assessment.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved assessment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single assessment.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Assessments-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single assessment.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.prefillCircularityMetrics": {
      "post": {
        "summary": "Invoke action prefillCircularityMetrics",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.prefillEolProductDesign": {
      "post": {
        "summary": "Invoke action prefillEolProductDesign",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.prefillMaterialSplits": {
      "post": {
        "summary": "Invoke action prefillMaterialSplits",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.prefillSalesSplits": {
      "post": {
        "summary": "Invoke action prefillSalesSplits",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "traditionalProductSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "repairServicesSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "reSellSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.prefillCircularityMetrics": {
      "post": {
        "summary": "Invoke action prefillCircularityMetrics",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.prefillEolProductDesign": {
      "post": {
        "summary": "Invoke action prefillEolProductDesign",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.prefillMaterialSplits": {
      "post": {
        "summary": "Invoke action prefillMaterialSplits",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.prefillSalesSplits": {
      "post": {
        "summary": "Invoke action prefillSalesSplits",
        "tags": [
          "{i18n>assessment.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "traditionalProductSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "repairServicesSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "reSellSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/circularityMetrics": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of circularity metrics of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "eoLRecyclability",
                  "eoLRecyclability desc",
                  "countryRecyclability_code",
                  "countryRecyclability_code desc",
                  "assessment_ID",
                  "assessment_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "eoLRecyclability",
                  "countryRecyclability_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "countryRecyclability",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved circularity metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of CircularityMetrics",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single circularity metric of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New circularity metric",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.CircularityMetrics-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created circularity metric",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/materialSplits": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of material splits of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "materialCode",
                  "materialCode desc",
                  "materialType",
                  "materialType desc",
                  "weightShare",
                  "weightShare desc",
                  "shareRecycled",
                  "shareRecycled desc",
                  "assessment_ID",
                  "assessment_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "materialCode",
                  "materialType",
                  "weightShare",
                  "shareRecycled",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved material splits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of MaterialSplits",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.MaterialSplits"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single material split of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New material split",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.MaterialSplits-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created material split",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.MaterialSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/product": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve product of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>product.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "typeCode",
                  "category",
                  "supplierId",
                  "taxTarifCode",
                  "measureUnit",
                  "weightMeasure",
                  "weightUnit",
                  "price",
                  "text",
                  "language_code",
                  "currency_code",
                  "eolProductDesign",
                  "traditionalSalesShare",
                  "repairSalesShare",
                  "resellSalesShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "language",
                  "currency",
                  "recyclingCountries",
                  "recyclingMaterials"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/project": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve project of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>project.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "validFrom",
                  "validTo"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessments",
                  "members"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Projects"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Assessments(ID={ID},IsActiveEntity='{IsActiveEntity}')/salesSplits": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of sales splits of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "totalRevenue",
                  "totalRevenue desc",
                  "traditionalProductSales",
                  "traditionalProductSales desc",
                  "repairServicesSales",
                  "repairServicesSales desc",
                  "reSellSales",
                  "reSellSales desc",
                  "currency_code",
                  "currency_code desc",
                  "country_code",
                  "country_code desc",
                  "assessment_ID",
                  "assessment_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "totalRevenue",
                  "traditionalProductSales",
                  "repairServicesSales",
                  "reSellSales",
                  "currency_code",
                  "country_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "country",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sales splits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of SalesSplits",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.SalesSplits"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single sales split of a {i18n>assessment.type name plural}.",
        "tags": [
          "{i18n>assessment.typeNamePlural}",
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New sales split",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.SalesSplits-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created sales split",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.SalesSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircularityMetrics": {
      "get": {
        "summary": "Retrieve a list of circularity metrics.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "eoLRecyclability",
                  "eoLRecyclability desc",
                  "countryRecyclability_code",
                  "countryRecyclability_code desc",
                  "assessment_ID",
                  "assessment_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "eoLRecyclability",
                  "countryRecyclability_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "countryRecyclability",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved circularity metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of CircularityMetrics",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single circularity metric.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New circularity metric",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.CircularityMetrics-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created circularity metric",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single circularity metric.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "eoLRecyclability",
                  "countryRecyclability_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "countryRecyclability",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved circularity metric",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single circularity metric.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.CircularityMetrics-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single circularity metric.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a {i18n>circularity metric.type name plural}.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a {i18n>circularity metric.type name plural}.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a {i18n>circularity metric.type name plural}.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a {i18n>circularity metric.type name plural}.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "eoLRecyclability",
                  "countryRecyclability_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "countryRecyclability",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.CircularityMetrics"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve assessment of a {i18n>circularity metric.type name plural}.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}",
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved assessment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillCircularityMetrics": {
      "post": {
        "summary": "Invoke action prefillCircularityMetrics",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillEolProductDesign": {
      "post": {
        "summary": "Invoke action prefillEolProductDesign",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillMaterialSplits": {
      "post": {
        "summary": "Invoke action prefillMaterialSplits",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillSalesSplits": {
      "post": {
        "summary": "Invoke action prefillSalesSplits",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "traditionalProductSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "repairServicesSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "reSellSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CircularityMetrics(ID={ID},IsActiveEntity='{IsActiveEntity}')/countryRecyclability": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve country recyclability of a {i18n>circularity metric.type name plural}.",
        "tags": [
          "{i18n>circularityMetric.typeNamePlural}",
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved country recyclability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries": {
      "get": {
        "summary": "Retrieve a list of countries.",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Countries",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Countries"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single country.",
        "tags": [
          "Countries"
        ],
        "requestBody": {
          "description": "New country",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Countries-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single country.",
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single country.",
        "tags": [
          "Countries"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Countries-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single country.",
        "tags": [
          "Countries"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve localized of a country.",
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of texts of a country.",
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Countries_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Countries_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single text of a country.",
        "tags": [
          "Countries",
          "Countries_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Countries_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries_texts": {
      "get": {
        "summary": "Retrieve a list of countries_texts.",
        "tags": [
          "Countries_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved countries_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Countries_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Countries_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "requestBody": {
          "description": "New countries_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Countries_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created countries_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Countries_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved countries_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Countries_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single countries_text.",
        "tags": [
          "Countries_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies": {
      "get": {
        "summary": "Retrieve a list of currencies.",
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "symbol",
                  "symbol desc",
                  "minorUnit",
                  "minorUnit desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Currencies"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single currency.",
        "tags": [
          "Currencies"
        ],
        "requestBody": {
          "description": "New currency",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Currencies-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single currency.",
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single currency.",
        "tags": [
          "Currencies"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Currencies-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single currency.",
        "tags": [
          "Currencies"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve localized of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of texts of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Currencies_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single text of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Currencies_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies_texts": {
      "get": {
        "summary": "Retrieve a list of currencies_texts.",
        "tags": [
          "Currencies_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Currencies_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "requestBody": {
          "description": "New currencies_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Currencies_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created currencies_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Currencies_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages": {
      "get": {
        "summary": "Retrieve a list of languages.",
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved languages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Languages",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Languages"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single language.",
        "tags": [
          "Languages"
        ],
        "requestBody": {
          "description": "New language",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Languages-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single language.",
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single language.",
        "tags": [
          "Languages"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Languages-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single language.",
        "tags": [
          "Languages"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieve localized of a language.",
        "tags": [
          "Languages",
          "Languages_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of texts of a language.",
        "tags": [
          "Languages",
          "Languages_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Languages_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Languages_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single text of a language.",
        "tags": [
          "Languages",
          "Languages_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Languages_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages_texts": {
      "get": {
        "summary": "Retrieve a list of languages_texts.",
        "tags": [
          "Languages_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved languages_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Languages_texts",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Languages_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single languages_text.",
        "tags": [
          "Languages_texts"
        ],
        "requestBody": {
          "description": "New languages_text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Languages_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created languages_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "key: locale",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single languages_text.",
        "tags": [
          "Languages_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved languages_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single languages_text.",
        "tags": [
          "Languages_texts"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Languages_texts-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single languages_text.",
        "tags": [
          "Languages_texts"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MaterialSplits": {
      "get": {
        "summary": "Retrieve a list of material splits.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "materialCode",
                  "materialCode desc",
                  "materialType",
                  "materialType desc",
                  "weightShare",
                  "weightShare desc",
                  "shareRecycled",
                  "shareRecycled desc",
                  "assessment_ID",
                  "assessment_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "materialCode",
                  "materialType",
                  "weightShare",
                  "shareRecycled",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved material splits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of MaterialSplits",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.MaterialSplits"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single material split.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New material split",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.MaterialSplits-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created material split",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.MaterialSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single material split.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "materialCode",
                  "materialType",
                  "weightShare",
                  "shareRecycled",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved material split",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.MaterialSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single material split.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.MaterialSplits-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single material split.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a {i18n>material split.type name plural}.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a {i18n>material split.type name plural}.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a {i18n>material split.type name plural}.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.MaterialSplits"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a {i18n>material split.type name plural}.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "materialCode",
                  "materialType",
                  "weightShare",
                  "shareRecycled",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.MaterialSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.MaterialSplits"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve assessment of a {i18n>material split.type name plural}.",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}",
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved assessment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillCircularityMetrics": {
      "post": {
        "summary": "Invoke action prefillCircularityMetrics",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillEolProductDesign": {
      "post": {
        "summary": "Invoke action prefillEolProductDesign",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillMaterialSplits": {
      "post": {
        "summary": "Invoke action prefillMaterialSplits",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/MaterialSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillSalesSplits": {
      "post": {
        "summary": "Invoke action prefillSalesSplits",
        "tags": [
          "{i18n>materialSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "traditionalProductSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "repairServicesSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "reSellSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Members": {
      "get": {
        "summary": "Retrieve a list of members.",
        "tags": [
          "{i18n>member.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "user_ID",
                  "user_ID desc",
                  "project_ID",
                  "project_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "user_ID",
                  "project_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "user",
                  "project"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Members",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Members"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Members({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single member.",
        "tags": [
          "{i18n>member.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "user_ID",
                  "project_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "user",
                  "project"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Members"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Members({ID})/project": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve project of a {i18n>member.type name plural}.",
        "tags": [
          "{i18n>member.typeNamePlural}",
          "{i18n>project.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "validFrom",
                  "validTo"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessments",
                  "members"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Projects"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Members({ID})/user": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve user of a {i18n>member.type name plural}.",
        "tags": [
          "{i18n>member.typeNamePlural}",
          "{i18n>user.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "fullName",
                  "firstName",
                  "lastName",
                  "email",
                  "role_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "role"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Users"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products": {
      "get": {
        "summary": "Retrieve a list of products.",
        "tags": [
          "{i18n>product.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "typeCode",
                  "typeCode desc",
                  "category",
                  "category desc",
                  "supplierId",
                  "supplierId desc",
                  "taxTarifCode",
                  "taxTarifCode desc",
                  "measureUnit",
                  "measureUnit desc",
                  "weightMeasure",
                  "weightMeasure desc",
                  "weightUnit",
                  "weightUnit desc",
                  "price",
                  "price desc",
                  "text",
                  "text desc",
                  "language_code",
                  "language_code desc",
                  "currency_code",
                  "currency_code desc",
                  "eolProductDesign",
                  "eolProductDesign desc",
                  "traditionalSalesShare",
                  "traditionalSalesShare desc",
                  "repairSalesShare",
                  "repairSalesShare desc",
                  "resellSalesShare",
                  "resellSalesShare desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "typeCode",
                  "category",
                  "supplierId",
                  "taxTarifCode",
                  "measureUnit",
                  "weightMeasure",
                  "weightUnit",
                  "price",
                  "text",
                  "language_code",
                  "currency_code",
                  "eolProductDesign",
                  "traditionalSalesShare",
                  "repairSalesShare",
                  "resellSalesShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "language",
                  "currency",
                  "recyclingCountries",
                  "recyclingMaterials"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Products",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Products"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products('{ID}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single product.",
        "tags": [
          "{i18n>product.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "typeCode",
                  "category",
                  "supplierId",
                  "taxTarifCode",
                  "measureUnit",
                  "weightMeasure",
                  "weightUnit",
                  "price",
                  "text",
                  "language_code",
                  "currency_code",
                  "eolProductDesign",
                  "traditionalSalesShare",
                  "repairSalesShare",
                  "resellSalesShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "language",
                  "currency",
                  "recyclingCountries",
                  "recyclingMaterials"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products('{ID}')/currency": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve currency of a {i18n>product.type name plural}.",
        "tags": [
          "{i18n>product.typeNamePlural}",
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products('{ID}')/language": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve language of a {i18n>product.type name plural}.",
        "tags": [
          "{i18n>product.typeNamePlural}",
          "Languages"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products('{ID}')/recyclingCountries": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of recycling countries of a {i18n>product.type name plural}.",
        "tags": [
          "{i18n>product.typeNamePlural}",
          "RecyclingCountries"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "product_ID desc",
                  "country_code",
                  "country_code desc",
                  "eolRecyclability",
                  "eolRecyclability desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "country_code",
                  "eolRecyclability"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "country"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved recycling countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of RecyclingCountries",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.RecyclingCountries"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Products('{ID}')/recyclingMaterials": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of recycling materials of a {i18n>product.type name plural}.",
        "tags": [
          "{i18n>product.typeNamePlural}",
          "RecyclingMaterials"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "product_ID desc",
                  "material",
                  "material desc",
                  "materialName",
                  "materialName desc",
                  "weightShare",
                  "weightShare desc",
                  "recycleShare",
                  "recycleShare desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "material",
                  "materialName",
                  "weightShare",
                  "recycleShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved recycling materials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of RecyclingMaterials",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.RecyclingMaterials"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Projects": {
      "get": {
        "summary": "Retrieve a list of projects.",
        "tags": [
          "{i18n>project.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "description",
                  "description desc",
                  "validFrom",
                  "validFrom desc",
                  "validTo",
                  "validTo desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "validFrom",
                  "validTo"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessments",
                  "members"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Projects",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Projects"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Projects({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single project.",
        "tags": [
          "{i18n>project.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "validFrom",
                  "validTo"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "assessments",
                  "members"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Projects"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Projects({ID})/assessments": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of assessments of a {i18n>project.type name plural}.",
        "tags": [
          "{i18n>project.typeNamePlural}",
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "description",
                  "description desc",
                  "eolProductDesign",
                  "eolProductDesign desc",
                  "product_ID",
                  "product_ID desc",
                  "project_ID",
                  "project_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved assessments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Assessments",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Assessments"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single assessment of a {i18n>project.type name plural}.",
        "tags": [
          "{i18n>project.typeNamePlural}",
          "{i18n>assessment.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New assessment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.Assessments-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created assessment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Projects({ID})/members": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a list of members of a {i18n>project.type name plural}.",
        "tags": [
          "{i18n>project.typeNamePlural}",
          "{i18n>member.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "user_ID",
                  "user_ID desc",
                  "project_ID",
                  "project_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "user_ID",
                  "project_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "user",
                  "project"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Members",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Members"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingCountries": {
      "get": {
        "summary": "Retrieve a list of recycling countries.",
        "tags": [
          "RecyclingCountries"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "product_ID desc",
                  "country_code",
                  "country_code desc",
                  "eolRecyclability",
                  "eolRecyclability desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "country_code",
                  "eolRecyclability"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "country"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved recycling countries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of RecyclingCountries",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.RecyclingCountries"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingCountries(product_ID='{product_ID}',country_code='{country_code}')": {
      "parameters": [
        {
          "description": "key: product_ID",
          "in": "path",
          "name": "product_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "{i18n>CountryCode.Description}",
          "in": "path",
          "name": "country_code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single recycling country.",
        "tags": [
          "RecyclingCountries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "country_code",
                  "eolRecyclability"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "country"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved recycling country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.RecyclingCountries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingCountries(product_ID='{product_ID}',country_code='{country_code}')/country": {
      "parameters": [
        {
          "description": "key: product_ID",
          "in": "path",
          "name": "product_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "{i18n>CountryCode.Description}",
          "in": "path",
          "name": "country_code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve country of a recycling country.",
        "tags": [
          "RecyclingCountries",
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingCountries(product_ID='{product_ID}',country_code='{country_code}')/product": {
      "parameters": [
        {
          "description": "key: product_ID",
          "in": "path",
          "name": "product_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "{i18n>CountryCode.Description}",
          "in": "path",
          "name": "country_code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieve product of a recycling country.",
        "tags": [
          "RecyclingCountries",
          "{i18n>product.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "typeCode",
                  "category",
                  "supplierId",
                  "taxTarifCode",
                  "measureUnit",
                  "weightMeasure",
                  "weightUnit",
                  "price",
                  "text",
                  "language_code",
                  "currency_code",
                  "eolProductDesign",
                  "traditionalSalesShare",
                  "repairSalesShare",
                  "resellSalesShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "language",
                  "currency",
                  "recyclingCountries",
                  "recyclingMaterials"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingMaterials": {
      "get": {
        "summary": "Retrieve a list of recycling materials.",
        "tags": [
          "RecyclingMaterials"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "product_ID desc",
                  "material",
                  "material desc",
                  "materialName",
                  "materialName desc",
                  "weightShare",
                  "weightShare desc",
                  "recycleShare",
                  "recycleShare desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "material",
                  "materialName",
                  "weightShare",
                  "recycleShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved recycling materials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of RecyclingMaterials",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.RecyclingMaterials"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingMaterials(product_ID='{product_ID}',material='{material}')": {
      "parameters": [
        {
          "description": "key: product_ID",
          "in": "path",
          "name": "product_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: material",
          "in": "path",
          "name": "material",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single recycling material.",
        "tags": [
          "RecyclingMaterials"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "product_ID",
                  "material",
                  "materialName",
                  "weightShare",
                  "recycleShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved recycling material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.RecyclingMaterials"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/RecyclingMaterials(product_ID='{product_ID}',material='{material}')/product": {
      "parameters": [
        {
          "description": "key: product_ID",
          "in": "path",
          "name": "product_ID",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: material",
          "in": "path",
          "name": "material",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve product of a recycling material.",
        "tags": [
          "RecyclingMaterials",
          "{i18n>product.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "typeCode",
                  "category",
                  "supplierId",
                  "taxTarifCode",
                  "measureUnit",
                  "weightMeasure",
                  "weightUnit",
                  "price",
                  "text",
                  "language_code",
                  "currency_code",
                  "eolProductDesign",
                  "traditionalSalesShare",
                  "repairSalesShare",
                  "resellSalesShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "language",
                  "currency",
                  "recyclingCountries",
                  "recyclingMaterials"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Roles": {
      "get": {
        "summary": "Retrieve a list of roles.",
        "tags": [
          "{i18n>role.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Roles",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Roles"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Roles('{ID}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single role.",
        "tags": [
          "{i18n>role.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Roles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesOrders": {
      "get": {
        "summary": "Retrieve a list of sales orders.",
        "tags": [
          "SalesOrders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "so",
                  "so desc",
                  "soItemPos",
                  "soItemPos desc",
                  "lifecycleStatus",
                  "lifecycleStatus desc",
                  "billingStatus",
                  "billingStatus desc",
                  "deliveryStatus",
                  "deliveryStatus desc",
                  "grossAmount",
                  "grossAmount desc",
                  "taxAmount",
                  "taxAmount desc",
                  "netAmount",
                  "netAmount desc",
                  "quantity",
                  "quantity desc",
                  "quantityUnit",
                  "quantityUnit desc",
                  "deliveryDate",
                  "deliveryDate desc",
                  "product_ID",
                  "product_ID desc",
                  "category",
                  "category desc",
                  "bpRole",
                  "bpRole desc",
                  "bpId",
                  "bpId desc",
                  "companyName",
                  "companyName desc",
                  "text",
                  "text desc",
                  "itemAtpStatus",
                  "itemAtpStatus desc",
                  "firstName",
                  "firstName desc",
                  "lastName",
                  "lastName desc",
                  "overallStatus",
                  "overallStatus desc",
                  "currency_code",
                  "currency_code desc",
                  "country_code",
                  "country_code desc",
                  "language_code",
                  "language_code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "so",
                  "soItemPos",
                  "lifecycleStatus",
                  "billingStatus",
                  "deliveryStatus",
                  "grossAmount",
                  "taxAmount",
                  "netAmount",
                  "quantity",
                  "quantityUnit",
                  "deliveryDate",
                  "product_ID",
                  "category",
                  "bpRole",
                  "bpId",
                  "companyName",
                  "text",
                  "itemAtpStatus",
                  "firstName",
                  "lastName",
                  "overallStatus",
                  "currency_code",
                  "country_code",
                  "language_code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "currency",
                  "country",
                  "language"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sales orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of SalesOrders",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.SalesOrders"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesOrders(so='{so}',soItemPos='{soItemPos}')": {
      "parameters": [
        {
          "description": "key: so",
          "in": "path",
          "name": "so",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 100
          }
        },
        {
          "description": "key: soItemPos",
          "in": "path",
          "name": "soItemPos",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single sales order.",
        "tags": [
          "SalesOrders"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "so",
                  "soItemPos",
                  "lifecycleStatus",
                  "billingStatus",
                  "deliveryStatus",
                  "grossAmount",
                  "taxAmount",
                  "netAmount",
                  "quantity",
                  "quantityUnit",
                  "deliveryDate",
                  "product_ID",
                  "category",
                  "bpRole",
                  "bpId",
                  "companyName",
                  "text",
                  "itemAtpStatus",
                  "firstName",
                  "lastName",
                  "overallStatus",
                  "currency_code",
                  "country_code",
                  "language_code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "currency",
                  "country",
                  "language"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sales order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.SalesOrders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesOrders(so='{so}',soItemPos='{soItemPos}')/country": {
      "parameters": [
        {
          "description": "key: so",
          "in": "path",
          "name": "so",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 100
          }
        },
        {
          "description": "key: soItemPos",
          "in": "path",
          "name": "soItemPos",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve country of a sales order.",
        "tags": [
          "SalesOrders",
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesOrders(so='{so}',soItemPos='{soItemPos}')/currency": {
      "parameters": [
        {
          "description": "key: so",
          "in": "path",
          "name": "so",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 100
          }
        },
        {
          "description": "key: soItemPos",
          "in": "path",
          "name": "soItemPos",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve currency of a sales order.",
        "tags": [
          "SalesOrders",
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesOrders(so='{so}',soItemPos='{soItemPos}')/language": {
      "parameters": [
        {
          "description": "key: so",
          "in": "path",
          "name": "so",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 100
          }
        },
        {
          "description": "key: soItemPos",
          "in": "path",
          "name": "soItemPos",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve language of a sales order.",
        "tags": [
          "SalesOrders",
          "Languages"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Languages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesOrders(so='{so}',soItemPos='{soItemPos}')/product": {
      "parameters": [
        {
          "description": "key: so",
          "in": "path",
          "name": "so",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 100
          }
        },
        {
          "description": "key: soItemPos",
          "in": "path",
          "name": "soItemPos",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        }
      ],
      "get": {
        "summary": "Retrieve product of a sales order.",
        "tags": [
          "SalesOrders",
          "{i18n>product.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "typeCode",
                  "category",
                  "supplierId",
                  "taxTarifCode",
                  "measureUnit",
                  "weightMeasure",
                  "weightUnit",
                  "price",
                  "text",
                  "language_code",
                  "currency_code",
                  "eolProductDesign",
                  "traditionalSalesShare",
                  "repairSalesShare",
                  "resellSalesShare"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "language",
                  "currency",
                  "recyclingCountries",
                  "recyclingMaterials"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Products"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits": {
      "get": {
        "summary": "Retrieve a list of sales splits.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "totalRevenue",
                  "totalRevenue desc",
                  "traditionalProductSales",
                  "traditionalProductSales desc",
                  "repairServicesSales",
                  "repairServicesSales desc",
                  "reSellSales",
                  "reSellSales desc",
                  "currency_code",
                  "currency_code desc",
                  "country_code",
                  "country_code desc",
                  "assessment_ID",
                  "assessment_ID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "totalRevenue",
                  "traditionalProductSales",
                  "repairServicesSales",
                  "reSellSales",
                  "currency_code",
                  "country_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "country",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sales splits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of SalesSplits",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.SalesSplits"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Create a single sales split.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New sales split",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.SalesSplits-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created sales split",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.SalesSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single sales split.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "totalRevenue",
                  "traditionalProductSales",
                  "repairServicesSales",
                  "reSellSales",
                  "currency_code",
                  "country_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "country",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sales split",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.SalesSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change a single sales split.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.SalesSplits-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete a single sales split.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve draft administrative data of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Change draft administrative data of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete draft administrative data of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.SalesSplits"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve sibling entity of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "totalRevenue",
                  "traditionalProductSales",
                  "repairServicesSales",
                  "reSellSales",
                  "currency_code",
                  "country_code",
                  "assessment_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "country",
                  "assessment",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.SalesSplits"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.SalesSplits"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve assessment of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}",
          "{i18n>assessment.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description",
                  "eolProductDesign",
                  "product_ID",
                  "project_ID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "project",
                  "salesSplits",
                  "materialSplits",
                  "circularityMetrics",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved assessment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Assessments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftActivate": {
      "post": {
        "summary": "Invoke action draftActivate",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftEdit": {
      "post": {
        "summary": "Invoke action draftEdit",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.draftPrepare": {
      "post": {
        "summary": "Invoke action draftPrepare",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PublicService.Assessments"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillCircularityMetrics": {
      "post": {
        "summary": "Invoke action prefillCircularityMetrics",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillEolProductDesign": {
      "post": {
        "summary": "Invoke action prefillEolProductDesign",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillMaterialSplits": {
      "post": {
        "summary": "Invoke action prefillMaterialSplits",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/assessment/PublicService.prefillSalesSplits": {
      "post": {
        "summary": "Invoke action prefillSalesSplits",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "traditionalProductSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "repairServicesSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  },
                  "reSellSales": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.01,
                        "maximum": 100,
                        "minimum": 0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 5,
                    "x-sap-scale": 2,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/country": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve country of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}",
          "Countries"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Countries"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SalesSplits(ID={ID},IsActiveEntity='{IsActiveEntity}')/currency": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieve currency of a {i18n>sales split.type name plural}.",
        "tags": [
          "{i18n>salesSplit.typeNamePlural}",
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Users": {
      "get": {
        "summary": "Retrieve a list of users.",
        "tags": [
          "{i18n>user.typeNamePlural}"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "fullName",
                  "fullName desc",
                  "firstName",
                  "firstName desc",
                  "lastName",
                  "lastName desc",
                  "email",
                  "email desc",
                  "role_ID",
                  "role_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "fullName",
                  "firstName",
                  "lastName",
                  "email",
                  "role_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "role"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Users",
                  "properties": {
                    "@odata.count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicService.Users"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Users({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve a single user.",
        "tags": [
          "{i18n>user.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "fullName",
                  "firstName",
                  "lastName",
                  "email",
                  "role_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "role"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Users"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Users({ID})/role": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieve role of a {i18n>user.type name plural}.",
        "tags": [
          "{i18n>user.typeNamePlural}",
          "{i18n>role.typeNamePlural}"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicService.Roles"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PublicService.Assessments": {
        "title": "Assessments",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "eolProductDesign": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Products"
              }
            ],
            "nullable": true
          },
          "product_ID": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Projects"
              }
            ],
            "nullable": true
          },
          "project_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "salesSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.SalesSplits"
            }
          },
          "salesSplits@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "materialSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.MaterialSplits"
            }
          },
          "materialSplits@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "circularityMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.CircularityMetrics"
            }
          },
          "circularityMetrics@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Assessments"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.Assessments-create": {
        "title": "Assessments (for create)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "eolProductDesign": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "product_ID": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "project_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity",
          "ID",
          "description",
          "product_ID",
          "project_ID"
        ]
      },
      "PublicService.Assessments-update": {
        "title": "Assessments (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "eolProductDesign": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PublicService.CircularityMetrics": {
        "title": "CircularityMetrics",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "eoLRecyclability": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "countryRecyclability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Countries"
              }
            ],
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "countryRecyclability_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "assessment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Assessments"
              }
            ],
            "nullable": true
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.CircularityMetrics"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.CircularityMetrics-create": {
        "title": "CircularityMetrics (for create)",
        "type": "object",
        "properties": {
          "eoLRecyclability": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "countryRecyclability_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity",
          "ID",
          "eoLRecyclability",
          "countryRecyclability_code"
        ]
      },
      "PublicService.CircularityMetrics-update": {
        "title": "CircularityMetrics (for update)",
        "type": "object",
        "properties": {
          "eoLRecyclability": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "countryRecyclability_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PublicService.Countries": {
        "title": "Countries",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.Countries_texts"
            }
          },
          "texts@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Countries_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.Countries-create": {
        "title": "Countries (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        },
        "required": [
          "code"
        ]
      },
      "PublicService.Countries-update": {
        "title": "Countries (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "PublicService.Countries_texts": {
        "title": "Countries_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        }
      },
      "PublicService.Countries_texts-create": {
        "title": "Countries_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        },
        "required": [
          "locale",
          "code"
        ]
      },
      "PublicService.Countries_texts-update": {
        "title": "Countries_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "PublicService.Currencies": {
        "title": "Currencies",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.Currencies_texts"
            }
          },
          "texts@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Currencies_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.Currencies-create": {
        "title": "Currencies (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          }
        },
        "required": [
          "code"
        ]
      },
      "PublicService.Currencies-update": {
        "title": "Currencies (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          }
        }
      },
      "PublicService.Currencies_texts": {
        "title": "Currencies_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        }
      },
      "PublicService.Currencies_texts-create": {
        "title": "Currencies_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        },
        "required": [
          "locale",
          "code"
        ]
      },
      "PublicService.Currencies_texts-update": {
        "title": "Currencies_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "PublicService.DraftAdministrativeData": {
        "title": "DraftAdministrativeData",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "PublicService.DraftAdministrativeData-create": {
        "title": "DraftAdministrativeData (for create)",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "DraftUUID"
        ]
      },
      "PublicService.DraftAdministrativeData-update": {
        "title": "DraftAdministrativeData (for update)",
        "type": "object",
        "properties": {
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "PublicService.Languages": {
        "title": "Languages",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 14
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.Languages_texts"
            }
          },
          "texts@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Languages_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.Languages-create": {
        "title": "Languages (for create)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 14
          }
        },
        "required": [
          "code"
        ]
      },
      "PublicService.Languages-update": {
        "title": "Languages (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "PublicService.Languages_texts": {
        "title": "Languages_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 14
          }
        }
      },
      "PublicService.Languages_texts-create": {
        "title": "Languages_texts (for create)",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 14
          }
        },
        "required": [
          "locale",
          "code"
        ]
      },
      "PublicService.Languages_texts-update": {
        "title": "Languages_texts (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "PublicService.MaterialSplits": {
        "title": "MaterialSplits",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "materialCode": {
            "type": "string",
            "nullable": true
          },
          "materialType": {
            "type": "string",
            "nullable": true
          },
          "weightShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "shareRecycled": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "assessment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Assessments"
              }
            ],
            "nullable": true
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.MaterialSplits"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.MaterialSplits-create": {
        "title": "MaterialSplits (for create)",
        "type": "object",
        "properties": {
          "materialCode": {
            "type": "string",
            "nullable": true
          },
          "materialType": {
            "type": "string",
            "nullable": true
          },
          "weightShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "shareRecycled": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity",
          "ID",
          "materialCode",
          "materialType",
          "weightShare",
          "shareRecycled"
        ]
      },
      "PublicService.MaterialSplits-update": {
        "title": "MaterialSplits (for update)",
        "type": "object",
        "properties": {
          "materialCode": {
            "type": "string",
            "nullable": true
          },
          "materialType": {
            "type": "string",
            "nullable": true
          },
          "weightShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "shareRecycled": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PublicService.Members": {
        "title": "Members",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Users"
              }
            ],
            "nullable": true
          },
          "user_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Projects"
              }
            ],
            "nullable": true
          },
          "project_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        }
      },
      "PublicService.Products": {
        "title": "Products",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "maxLength": 10
          },
          "typeCode": {
            "type": "string",
            "maxLength": 2,
            "nullable": true
          },
          "category": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "supplierId": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "taxTarifCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "measureUnit": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "weightMeasure": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 999999999999.999,
                "minimum": -999999999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 15,
            "x-sap-scale": 3,
            "nullable": true
          },
          "weightUnit": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "text": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Languages"
              }
            ],
            "nullable": true,
            "description": "{i18n>LanguageCode.Description}"
          },
          "language_code": {
            "type": "string",
            "maxLength": 14,
            "nullable": true,
            "description": "{i18n>LanguageCode.Description}"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Currencies"
              }
            ],
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "eolProductDesign": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "traditionalSalesShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "repairSalesShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "resellSalesShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "recyclingCountries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.RecyclingCountries"
            }
          },
          "recyclingCountries@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "recyclingMaterials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.RecyclingMaterials"
            }
          },
          "recyclingMaterials@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        }
      },
      "PublicService.Projects": {
        "title": "Projects",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "validTo": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "assessments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.Assessments"
            }
          },
          "assessments@odata.count": {
            "$ref": "#/components/schemas/count"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicService.Members"
            }
          },
          "members@odata.count": {
            "$ref": "#/components/schemas/count"
          }
        }
      },
      "PublicService.RecyclingCountries": {
        "title": "RecyclingCountries",
        "type": "object",
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Products"
              }
            ],
            "nullable": true
          },
          "product_ID": {
            "type": "string",
            "maxLength": 10
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Countries"
              }
            ],
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "country_code": {
            "type": "string",
            "maxLength": 3,
            "description": "{i18n>CountryCode.Description}"
          },
          "eolRecyclability": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          }
        }
      },
      "PublicService.RecyclingMaterials": {
        "title": "RecyclingMaterials",
        "type": "object",
        "properties": {
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Products"
              }
            ],
            "nullable": true
          },
          "product_ID": {
            "type": "string",
            "maxLength": 10
          },
          "material": {
            "type": "string"
          },
          "materialName": {
            "type": "string",
            "nullable": true
          },
          "weightShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          },
          "recycleShare": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 100,
                "minimum": 0
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 5,
            "x-sap-scale": 2,
            "nullable": true
          }
        }
      },
      "PublicService.Roles": {
        "title": "Roles",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PublicService.SalesOrders": {
        "title": "SalesOrders",
        "type": "object",
        "properties": {
          "so": {
            "type": "string",
            "maxLength": 100
          },
          "soItemPos": {
            "type": "string",
            "maxLength": 10
          },
          "lifecycleStatus": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "billingStatus": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "deliveryStatus": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "grossAmount": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "taxAmount": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "netAmount": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "quantity": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 9999999999999.99,
                "minimum": -9999999999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 15,
            "x-sap-scale": 2,
            "nullable": true
          },
          "quantityUnit": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "product": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Products"
              }
            ],
            "nullable": true
          },
          "product_ID": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "category": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "bpRole": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "bpId": {
            "type": "string",
            "maxLength": 10,
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "maxLength": 80,
            "nullable": true
          },
          "text": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "itemAtpStatus": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "overallStatus": {
            "type": "string",
            "maxLength": 1,
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Currencies"
              }
            ],
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Countries"
              }
            ],
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "country_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Languages"
              }
            ],
            "nullable": true,
            "description": "{i18n>LanguageCode.Description}"
          },
          "language_code": {
            "type": "string",
            "maxLength": 14,
            "nullable": true,
            "description": "{i18n>LanguageCode.Description}"
          }
        }
      },
      "PublicService.SalesSplits": {
        "title": "SalesSplits",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "totalRevenue": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "traditionalProductSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "repairServicesSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "reSellSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Currencies"
              }
            ],
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Countries"
              }
            ],
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "country_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "assessment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Assessments"
              }
            ],
            "nullable": true
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.SalesSplits"
              }
            ],
            "nullable": true
          }
        }
      },
      "PublicService.SalesSplits-create": {
        "title": "SalesSplits (for create)",
        "type": "object",
        "properties": {
          "totalRevenue": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "traditionalProductSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "repairServicesSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "reSellSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "country_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity",
          "ID",
          "totalRevenue",
          "country_code"
        ]
      },
      "PublicService.SalesSplits-update": {
        "title": "SalesSplits (for update)",
        "type": "object",
        "properties": {
          "totalRevenue": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "traditionalProductSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "repairServicesSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "reSellSales": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CurrencyCode.Description}"
          },
          "country_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true,
            "description": "{i18n>CountryCode.Description}"
          },
          "assessment_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "PublicService.Users": {
        "title": "Users",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PublicService.Roles"
              }
            ],
            "nullable": true
          },
          "role_ID": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}