{
    "name": "btp-cap-genai-rag",
    "version": "1.0.0",
    "description": "GenAI Mail Insights",
    "repository": "https://github.com/SAP-samples/btp-cap-genai-rag",
    "license": "Apache License 2.0",
    "private": true,
    "dependencies": {
        "@sap-cloud-sdk/connectivity": "^3.2.0",
        "@sap-cloud-sdk/generator": "^3.4.0",
        "@sap-cloud-sdk/http-client": "^3.2.0",
        "@sap-cloud-sdk/openapi": "^3.2.0",
        "@sap/audit-logging": "^5",
        "@sap/cds": "^7.2.0",
        "@sap/cds-hana": "^2.0.0",
        "@sap/cds-odata-v2-adapter-proxy": "^1",
        "@sap/xsenv": "^4.0.0",
        "@sap/xssec": "^3.3.4",
        "axios": "^1.5.0",
        "cds-swagger-ui-express": "^0.5.0",
        "cf-nodejs-logging-support": "^6",
        "cfenv": "^1",
        "combined-stream": "^1.0.8",
        "cors": "^2.8.5",
        "express": "^4",
        "langchain": "^0.0.153",
        "module-alias": "^2.2.3",
        "node-fetch": "^2.6.7",
        "openai": "~4.4.0",
        "passport": "^0.6.0",
        "pg": "^8.11.2",
        "typeorm": "^0.3.17",
        "uuid": "^9.0.1"
    },
    "devDependencies": {
        "@babel/cli": "^7.22.15",
        "@prettier/plugin-xml": "^3.2.1",
        "@sap/approuter": "^14.1.1",
        "@sap/cds-common-content": "1.0.1",
        "@sap/cds-dk": "^7.2.0",
        "@sap/html5-app-deployer": "^5.0.0",
        "@sap/html5-repo-mock": "^2.1.1",
        "@sap/ux-specification": "^1.96.4",
        "@swc/core": "1.3.82",
        "@types/cors": "^2.8.13",
        "@types/express": "^4.17.17",
        "@types/node": "^20.4.2",
        "@types/pg": "^8.10.2",
        "@types/sap__xsenv": "^3.3.0",
        "chai": "^4.3.7",
        "chai-as-promised": "^7.1.1",
        "chai-subset": "^1.6.0",
        "jest": "^29.0.1",
        "mbt": "^1.2.18",
        "npm-run-all": "^4.1.5",
        "prettier": "3.0.3",
        "rimraf": "^5.0.1",
        "shx": "^0.3.4"
    },
    "scripts": {
        "start": "cds-serve",
        "deploy": "cds deploy --to sqlite",
        "----------------------": "",
        "-Local/Hybrid-Testing-": "",
        "/--------------------/": "",
        "test": "mocha --timeout 20000",
        "dev": "npx --yes npm-run-all --npm-path npm --parallel cap:dev ui5:dev",
        "hybrid": "npx --yes npm-run-all --npm-path npm --parallel cap:hybrid mock:hybrid ui5:hybrid",
        "---UI5-App---": "",
        "ui5:init": "npm install --prefix ./app/ai-ui-ui5",
        "ui5:dev": "npm run start --prefix ./app/ai-ui-ui5",
        "ui5:hybrid": "npm run start:hybrid --prefix ./app/ai-ui-ui5",
        "---Backend-Service---": "",
        "cap:dev": "cds-ts watch --profile development",
        "cap:hybrid": "cds-ts watch --profile hybrid",
        "---HTML5-Mock-Repo---": "",
        "mock:hybrid": "cds bind --exec npm run mock:run:hybrid",
        "mock:run:hybrid": "(cd router && cds bind --exec --profile hybrid-router node ../node_modules/@sap/html5-repo-mock/index.js)",
        "---Application-Router---": "",
        "router:hybrid": "cds bind --exec npm run router:run",
        "router:run": "(cd router && cds bind --exec --profile hybrid-router node index.js)",
        "-Manual HTML5 Deployment-": "",
        "deployer:hybrid": "cds bind --exec --profile hybrid-html5 npm run deployer:run",
        "deployer:run": "(cd app/html5-deployer && node ../../node_modules/@sap/html5-app-deployer/index.js)",
        "---------------------": "",
        "-----PostgreSQL------": "",
        "/-------------------/": "",
        "start:pg": "docker compose up -d",
        "stop:pg": "docker compose stop",
        "--------------------": "",
        "--------BUILD-------": "",
        "/------------------/": "",
        "build": "npm run inst && npm run build:cds && npm run build:ui && npm run build:ts && npm run cleanup:ts",
        "inst": "npm i && npm install --prefix ./app/ai-ui-ui5",
        "build:cds": "npx -p @sap/cds-dk cds build --profile production",
        "build:ui": "npm run build --prefix ./app/ai-ui-ui5/ && npm run copy --prefix ./app/ai-ui-ui5/",
        "build:ts": "tsc -p ./tsconfig.json", 
        "cleanup:ts": "npx shx rm -r \"./gen/**/*.{ts,tsconfig}\"",
        "cds2types": "cd app-service && cds2types --cds ./$npm_config_service.cds --output ./types/entities.ts"
    },
    "prettier": {
        "arrowParens": "always",
        "tabWidth": 4,
        "semi": true,
        "singleQuote": false,
        "trailingComma": "none",
        "printWidth": 120
    }
}
