import { AI21 } from 'langchain/llms/ai21';
import { BTPAI21JurassicClient } from '../../client/ai21.mjs';
import '../../base-540b2ebe.mjs';
import '@sap-cloud-sdk/util';
import '../../index-924dd70f.mjs';
import '@sap/xsenv';
import 'fs';
import 'util';
import 'axios';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class BTPAI21Jurassic extends AI21 {
  constructor(fields) {
    var _a;
    super(__spreadProps(__spreadValues({}, fields), { ai21ApiKey: "dummy" }));
    __publicField(this, "btpAI21JurassicClient");
    __publicField(this, "deployment_id");
    __publicField(this, "topKReturn");
    this.deployment_id = (_a = fields == null ? void 0 : fields.deployment_id) != null ? _a : "ai21-j2-grande-instruct";
    this.topKReturn = fields == null ? void 0 : fields.topKReturn;
    this.btpAI21JurassicClient = new BTPAI21JurassicClient();
  }
  async _call(prompt, options, runManager) {
    const res = await this.caller.callWithOptions(
      {
        signal: options.signal
      },
      () => {
        var _a;
        return this.btpAI21JurassicClient.createTextCompletion(
          {
            deployment_id: this.deployment_id,
            prompt,
            maxTokens: this.maxTokens,
            minTokens: this.minTokens,
            temperature: this.temperature,
            topP: this.topP,
            topKReturn: this.topKReturn,
            numResults: this.numResults,
            stopSequences: (_a = options.stop) != null ? _a : this.stop,
            countPenalty: this.countPenalty,
            presencePenalty: this.presencePenalty,
            frequencyPenalty: this.frequencyPenalty
          },
          {
            signal: options.signal,
            timeout: options.timeout
          }
        );
      }
    );
    await (runManager == null ? void 0 : runManager.handleLLMNewToken(res.completions[0].data.text));
    return res.completions[0].data.text;
  }
}

export { BTPAI21Jurassic };
