import { BaseLanguageModelCallOptions } from 'langchain/base_language';
import { CallbackManagerForLLMRun } from 'langchain/callbacks';
import { AnthropicInput, ChatAnthropic } from 'langchain/chat_models/anthropic';
import { BaseChatModelParams } from 'langchain/chat_models/base';
import { BaseMessage, ChatResult } from 'langchain/schema';
import { BTPAnthropicClaudeChatModel, BTPAnthropicClaudeChatMessage, BTPAnthropicClaudeCompletionResult } from '../../client/anthropic.js';
import { B as BTPBaseLLMParameters } from '../../base-cac7307b.js';
import 'axios';
import '../../config-822cfdeb.js';
import '@sap-cloud-sdk/util';

/**
 * Input for Text generation for Anthropic
 */
interface BTPAnthropicClaudeChatInput extends Omit<AnthropicInput, "modelName" | "anthropicApiKey" | "anthropicApiUrl" | "invocationKwargs" | "streaming">, BTPBaseLLMParameters<BTPAnthropicClaudeChatModel>, BaseChatModelParams {
}
/**
 * Anthropic's Claude Wrapper to generate texts
 */
declare class BTPAnthropicClaudeChat extends ChatAnthropic implements BTPAnthropicClaudeChatInput {
    CallOptions: BaseLanguageModelCallOptions;
    private btpAnthropicClaudeClient;
    deployment_id: BTPAnthropicClaudeChatModel;
    constructor(fields?: Partial<BTPAnthropicClaudeChatInput>);
    get lc_secrets(): {
        [key: string]: string;
    } | undefined;
    get lc_aliases(): Record<string, string>;
    _generate(messages: BaseMessage[], options: this["CallOptions"], runManager?: CallbackManagerForLLMRun): Promise<ChatResult>;
    /**
     * Maps a {@link BaseMessage} to OpenAI's Message Role
     */
    protected mapBaseMessageToRole(message: BaseMessage): BTPAnthropicClaudeChatMessage["role"];
    /**
     * Maps {@link BaseMessage} to Anthropic Claude Messages
     */
    protected mapBaseMessagesToBTPAnthropicClaudeMessages(messages: BaseMessage[]): BTPAnthropicClaudeChatMessage[];
    /**
     * Maps Anthropic Claude messages to LangChain's {@link ChatResult}
     */
    protected mapBTPAnthropicClaudeMessagesToChatResult(res: BTPAnthropicClaudeCompletionResult): ChatResult;
}

export { BTPAnthropicClaudeChat, type BTPAnthropicClaudeChatInput };
