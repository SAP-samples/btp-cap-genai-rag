import { Embeddings } from 'langchain/embeddings/base';
import { BaseLLMParams } from 'langchain/llms/base';
import { B as BTPBaseLLMParameters } from '../../base-cac7307b.js';
import { BTPLLMProxyEmbeddingParameters, BTPLLMEmbeddingModel } from '../../client/btp.js';
import 'axios';
import '../../config-822cfdeb.js';
import '@sap-cloud-sdk/util';
import 'zod-to-json-schema/src/parseDef.js';
import '../../client/ai21.js';
import '../../client/alephalpha.js';
import '../../client/amazon.js';
import '../../client/anthropic.js';
import '../../client/cohere.js';
import '../../client/google.js';
import '../../client/huggingface.js';
import '../../client/openai.js';

/**
 * Input for Text generation for BTP LLM Proxy
 */
interface BTPLLMProxyEmbeddingInput extends Omit<BTPLLMProxyEmbeddingParameters, "input">, BTPBaseLLMParameters<BTPLLMEmbeddingModel>, BaseLLMParams {
    /**
     * Whether to strip new lines from the input text.
     */
    stripNewLines?: boolean;
}
/**
 * BTP LLM Proxy Language Model Wrapper to embed texts
 */
declare class BTPLLMProxyEmbedding extends Embeddings implements BTPLLMProxyEmbeddingInput {
    private BTPLLMProxyClient;
    deployment_id: BTPLLMEmbeddingModel;
    batchSize: number;
    stripNewLines: boolean;
    constructor(fields?: Partial<BTPLLMProxyEmbeddingInput>);
    embedDocuments(documents: string[]): Promise<number[][]>;
    embedQuery(query: string): Promise<number[]>;
}

export { BTPLLMProxyEmbedding, type BTPLLMProxyEmbeddingInput };
