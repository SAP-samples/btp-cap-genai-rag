global:
  imagePullSecret: {}
  domain:  # see domain in Config Map kube-system/shoot-info or custom domain (e.g. sap-demo.com) 
  shootName:  # see shootName in Config Map kube-system/shoot-info
  gateway: # use default value (kyma-system/kyma-gateway) or custom gateway (e.g. ai/demo-gateway)
  # If necessary, override essential dependencies required in subcharts
  # Required in case you e.g., provide a fullNameOverride or a custom exposed host
  router:
    name: # leave empty to apply default logic - router (e.g. router)
    fullName: # leave empty to apply default logic - $Release.Name-router (e.g. ai-router)
    deploymentHost: # leave empty to apply default logic - $Release.Name-router-$Release.Namespace (e.g. ai-router-default)
    port: # leave empty to apply default value - 5000

# Application Router Workload
router:
  bindings:
    xsuaa:
      serviceInstanceName: xsuaa
    destination:
      serviceInstanceName: destination
    html5-apps-repo:
      serviceInstanceName: html5-repo-runtime
  image:
    # Provide your Application Router Docker Image repository
    repository: 
    tag: 
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
      cpu: 300m
    requests:
      ephemeral-storage: 1G
      cpu: 300m
      memory: 500M

# Backend Service Workload
srv:
  port: 8080
  bindings:
    xsuaa:
      serviceInstanceName: xsuaa
    destination: 
      serviceInstanceName: destination
    hana: 
      serviceInstanceName: com-hdi-container
    html5-apps-repo:
      serviceInstanceName: html5-repo-runtime
  image:
    # Provide your Backend Service Docker Image repository
    repository: 
    tag: 
  resources:
    limits:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M

# Database Container Deployer Job
# Deploys the shared data model to a database container
hana_deployer:
  image:
    # Provide your HDI Container Deployer Docker Image repository
    repository: 
    tag: 
  bindings:
    hana:
      serviceInstanceName: com-hdi-container
  resources:
    limits:
      cpu: 500m
      memory: 1G
    requests:
      cpu: 500m
      memory: 1G

# HTML5 Apps Deployer Job
# Deploys the UI modules to the HTML5 App Repository
html5_apps_deployer:
  cloudService: ai
  image:
    # Provide your HTML5 Apps Deployer Docker Image repository
    repository: 
    tag: 
  bindings:
    html5-apps-repo:
      serviceInstanceName: html5-repo-host
  resources:
    limits:
      cpu: 500m
      memory: 500M
    requests:
      cpu: 300m
      memory: 500M

# SAP XSUAA Instance 
# XSUAA instance for application based on application service plan
xsuaa:
  serviceOfferingName: xsuaa
  servicePlanName: application
  parameters:
    # xsappname has to be unique in the same subaccount
    xsappname: '{{.Release.Name}}-{{.Release.Namespace}}'
    tenant-mode: dedicated
    # Role collections names have to be unique in the same subaccount
    # Therefore a unique identifer has to be utilized 
    role-collections:
      - name: 'GenAI Mail Insights Member ({{.Release.Name}}-{{.Release.Namespace}})'
        description: Member Access
        role-template-references: 
          - '$XSAPPNAME.Member'
          - '$XSAPPNAME.Token_Exchange'
      - name: 'GenAI Mail Insights Administrator ({{.Release.Name}}-{{.Release.Namespace}})'
        description: Administrator Access
        role-template-references: 
          - '$XSAPPNAME.Admin'
          - '$XSAPPNAME.Token_Exchange'
    scopes:
      - name: uaa.user
        description: UAA
      - name: "$XSAPPNAME.Member"
        description: Member
      - name: "$XSAPPNAME.Admin"
        description: Administrator
    attributes: []
    role-templates:
      - name: Token_Exchange
        description: UAA Token Exchange
        scope-references: ["uaa.user"]
      - name: Member
        description: Member
        scope-references: ["$XSAPPNAME.Member"]
      - name: Admin
        description: Administrator
        scope-references: ["$XSAPPNAME.Admin"]
    oauth2-configuration:
      token-validity: 900
      redirect-uris: 
        - http://*.localhost:5000/**
        - http://localhost:5000/**
      credential-types:
        - binding-secret
        - x509

# SAP Destination Service 
# Used to centrally store destinations of the application
destination:
  serviceOfferingName: destination
  servicePlanName: lite
  parameters:
    version: 1.0.0
    HTML5Runtime_enabled: false
    init_data:
      instance:
        existing_destinations_policy: update
        destinations:
          # Backend Destination depends on dynamic Release name
          - Name: ai-srv-api
            Description: GenAI Mail Insights Service API
            Authentication: NoAuthentication
            ProxyType: Internet
            Type: HTTP
            URL: 'http://{{ include "cap.fullname" (merge (dict "name" "srv" "deployment" .Values.srv ) . ) }}:{{ .Values.srv.port }}'
            HTML5.DynamicDestination: true
            HTML5.ForwardAuthToken: true
            HTML5.Timeout: 300000

# SAP HANA Cloud HDI Container
# Required for data model deployment
com_hdi_container:
  serviceOfferingName: hana
  servicePlanName: hdi-shared

# SAP HTML5 Application Repository
# Storing the application UI modules
html5_repo_host:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-host

# SAP HTML5 Application Repository
# Allows access to the applicaiton UI modules 
html5_repo_runtime:
  serviceOfferingName: html5-apps-repo
  servicePlanName: app-runtime